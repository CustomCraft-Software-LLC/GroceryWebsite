{"version":3,"file":"component---src-pages-products-js-92006fd76b5839235663.js","mappings":"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","sources":["webpack://Grocery/./node_modules/@mui/material/CardMedia/cardMediaClasses.js","webpack://Grocery/./node_modules/@mui/material/CardMedia/CardMedia.js","webpack://Grocery/./node_modules/@mui/material/Card/cardClasses.js","webpack://Grocery/./node_modules/@mui/material/Card/Card.js","webpack://Grocery/./node_modules/@mui/material/CardContent/cardContentClasses.js","webpack://Grocery/./node_modules/@mui/material/CardContent/CardContent.js","webpack://Grocery/./src/components/ProductCard.js","webpack://Grocery/./src/data/products.js","webpack://Grocery/./src/pages/products.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardMediaUtilityClass } from \"./cardMediaClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center',\n  variants: [{\n    props: {\n      isMediaComponent: true\n    },\n    style: {\n      width: '100%'\n    }\n  }, {\n    props: {\n      isImageComponent: true\n    },\n    style: {\n      objectFit: 'cover'\n    }\n  }]\n});\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style,\n    ...other\n  } = props;\n  const isMediaComponent = MEDIA_COMPONENTS.includes(component);\n  const composedStyle = !isMediaComponent && image ? {\n    backgroundImage: `url(\"${image}\")`,\n    ...style\n  } : style;\n  const ownerState = {\n    ...props,\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.includes(component)\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, {\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined,\n    ...other,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import React from 'react';\r\nimport { Card, CardMedia, CardContent, Typography } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nconst ProductCard = ({ product }) => { \r\n  const theme = useTheme();\r\n\r\n  return ( \r\n    <Card sx={{ minWidth: 300, background: theme.palette.primary.main, maxWidth: 345 }}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"140\"\r\n        image={product.image}\r\n        alt={product.name}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"h5\" gutterBottom >\r\n          {product.name}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          ${product.price}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ProductCard;","const products = [\r\n  {\r\n    id: 1,\r\n    name: 'Fresh Apples',\r\n    price: 1.99,\r\n    image: 'https://via.placeholder.com/200x200.png?text=Fresh+Apples',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Organic Carrots',\r\n    price: 0.99,\r\n    image: 'https://via.placeholder.com/200x200.png?text=Organic+Carrots',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Artisan Bread',\r\n    price: 2.49,\r\n    image: 'https://via.placeholder.com/200x200.png?text=Artisan+Bread',\r\n  },\r\n];\r\n\r\nexport default products;","import React, { useState } from 'react';\r\nimport { Box, Typography, TextField, Stack } from '@mui/material';\r\nimport ProductCard from '../components/ProductCard';\r\nimport products from '../data/products';\r\nimport Layout from '../components/layout';\r\n\r\nconst Products = () => {\r\n  const [search, setSearch] = useState('');\r\n\r\n  const filteredProducts = products.filter((product) =>\r\n    product.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <Box sx={{ padding: 4 }}>\r\n        <Typography variant=\"h1\" align=\"center\" gutterBottom>\r\n          Our Products\r\n        </Typography>\r\n\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', mb: 4 }}>\r\n          <TextField\r\n            label=\"Search Products\"\r\n            variant=\"outlined\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            sx={{ maxWidth: 400, width: '100%' }}\r\n          />\r\n        </Box>\r\n\r\n        <Stack\r\n          direction=\"row\"\r\n          sx={{\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'center',\r\n            gap: 3,\r\n          }}\r\n        >\r\n          {filteredProducts.length > 0 ? (\r\n            filteredProducts.map((product, index) => (\r\n              <ProductCard key={index} product={product} />\r\n            ))\r\n          ) : (\r\n            <Typography\r\n              variant=\"body1\"\r\n              sx={{\r\n                textAlign: 'center',\r\n                width: '100%',\r\n              }}\r\n            >\r\n              No products match your search.\r\n            </Typography>\r\n          )}\r\n        </Stack>\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Products;"],"names":["getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardMediaRoot","styled","name","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","display","backgroundSize","backgroundRepeat","backgroundPosition","variants","style","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","inProps","ref","children","className","component","image","src","other","includes","composedStyle","backgroundImage","classes","slots","composeClasses","useUtilityClasses","clsx","as","role","undefined","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","product","theme","useTheme","sx","minWidth","background","palette","primary","main","maxWidth","CardMedia","height","alt","Typography","variant","gutterBottom","price","id","search","setSearch","useState","filteredProducts","products","filter","toLowerCase","Box","align","justifyContent","mb","TextField","label","value","onChange","e","target","Stack","direction","flexWrap","gap","length","map","index","key","textAlign"],"sourceRoot":""}